# MicroFB - A simple Framebuffer library for RISC OS
# (c) 2024 by Paolo Fabio Zaino, all rights reserved
# Licensed under the CDDL v1.1 License

CXX = g++
PTHREAD = -pthread
EXT_SYM = .
CFLAGS_BASE = -Wall -Wextra -pedantic -std=c++11 -O2
LDFLAGS_EXTRA =
extras =
server =
client =

LIB_NAME = MicroFB
LIB_SOURCES = fb.cpp layer.cpp render_strategy.cpp screen_info.cpp asf_handler.cpp
LIB_OBJECTS = $(LIB_SOURCES:.cpp=.o)
LIB_OUT = lib$(LIB_NAME)$(EXT_SYM)a
LIB_LINK = -L. -l$(LIB_NAME)

ifeq ($(OS), RISC_OS)
    CXX = g++
#    PTHREAD = -lpthread
    PTHREAD =
    EXT_SYM =.
    CFLAGS_BASE = -Wall -Wextra -pedantic -std=c++11
    LDFLAGS_EXTRA = -lgcc -lstdlib_extras
    #extras = stdlib_extras
    LIB_LINK = -l$(LIB_NAME)
endif
ifeq ($(OS), Darwin)
    #CXX = /opt/homebrew/bin/g++-13
    PTHREAD = -pthread
    LIB_LINK = $(LIB_OUT)
endif

CFLAGS = $(CFLAGS_BASE) $(PTHREAD)


all: $(LIB_OUT) $(server) $(client)

# Pre-GCC 4.8.1 compatibility
stdlib_extras: stdlib_extras.cpp
	$(CC) $(CFLAGS) -o stdlib_extras.o -c stdlib_extras.cpp
	ar rcs libstdlib_extras.a stdlib_extras.o

# Library compilation
$(LIB_OUT): $(LIB_OBJECTS)
	ar rcs $(LIB_OUT) $(LIB_OBJECTS)

$(LIB_OBJECTS): $(LIB_SOURCES)
	$(CXX) $(CFLAGS) -c $(LIB_SOURCES)

# Server executable
#$(server): Server.cpp $(LIB_OUT) $(extras)
#	$(CXX) $(CFLAGS) -o $(server) Server.cpp $(LIB_LINK) $(LDFLAGS_EXTRA)

# Client executable
#$(client): Client.cpp $(LIB_OUT) $(extras)
#	$(CXX) $(CFLAGS) -o $(client) Client.cpp $(LIB_LINK) $(LDFLAGS_EXTRA)

.PHONY: clean

clean:
	rm -f $(LIB_OBJECTS) $(LIB_OUT) $(server) $(client)
