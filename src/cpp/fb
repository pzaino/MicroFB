/*
 * This file is part of: 
 *      MicroFB, a minimal framebuffer library for RISC OS
 *
 * Description: 
 *      This project aims to provide a simple and efficient way to manage
 *      the framebuffer on RISC OS using C++11. It abstracts the direct 
 *      interaction with the GraphicsV API, offering a higher-level 
 *      interface for drawing operations and framebuffer manipulation.
 *
 * Author:
 *     Paolo Fabio Zaino, all rights reserved.
 * Distributed under License: 
 *      CDDL v1.1 (Common Development and Distribution License Version 
 *      1.1) The use of this project is subject to the terms of the 
 *      CDDL v1.1. This project can be used and distributed according 
 *      to the terms of this license. For details on the CDDL v1.1, 
 *      please refer to the official license documentation.
 */

#include <vector>
#include <cstdint> // For standard integer types

#include "fb.hpp"

FrameBuffer::FrameBuffer(pixel_t width, pixel_t height) : 
    width_(width), height_(height), buffer_(width * height) {} // Initialize the buffer with the given width and height

void FrameBuffer::setPixel(pixel_t x, pixel_t y, color_t color) {
    // Set the pixel at the given coordinates to the specified color
    pixel_t index = y * getWidth() + x;
    buffer[index] = color;
}

color_t FrameBuffer::getPixel(pixel_t x, pixel_t y) const {
    // Get the color of the pixel at the given coordinates
    pixel_t index = y * getWidth() + x;
    return buffer[index];
}

int FrameBuffer::getWidth() const {
    // Get the width of the frame buffer
    return buffer.size() / getHeight();
}

int FrameBuffer::getHeight() const {
    // Get the height of the frame buffer
    return buffer.size() / getWidth();
}
